/*2015 Yuri Niitsuma <ignitzhjfk@gmail.com>*/var log;var stringChars = app.selection[0].characters;// $.writeln(log);var charBold,	charSuper,	charSub,	charItalic,	charBoldIt,	charSuperBold,	charSuperItalic,	charSubBold,	charSubItalic,	charSymbol,	charSymbolBold,	charMTExtra,	charMTExtraBold;app.activeDocument.allCharacterStyles;for(var i = 0, temp = app.activeDocument.allCharacterStyles; i < temp.length; i++){	if (temp[i].name == 'Bold') {		charBold = temp[i];		$.writeln('log: Bold set');	}	else if (temp[i].name == 'Superscript') {		charSuper = temp[i];		$.writeln('log: Superscript set');	}	else if (temp[i].name == 'Subscript') {		charSub = temp[i];		$.writeln('log: Subscript set');	}	else if (temp[i].name == 'Italic') {		charItalic = temp[i];		$.writeln('log: Italic set');	}	else if (temp[i].name == 'Bold +italic') {		charBoldIt = temp[i];		$.writeln('log: Bold Italic set');	}	else if (temp[i].name == 'Superscript Bold') {		charSuperBold = temp[i];		$.writeln('log: Superscript Bold set');	}	else if (temp[i].name == 'Superscript Italic') {		charSuperItalic = temp[i];		$.writeln('log: Superscript Italic set');	}	else if (temp[i].name == 'Subscript Bold') {		charSubBold = temp[i];		$.writeln('log: Subscript Bold set');	}	else if (temp[i].name == 'Subscript Italic') {		charSubItalic = temp[i];		$.writeln('log: Subscript Italic set');	}	else if (temp[i].name == 'Symbol') {		charSymbol = temp[i];		$.writeln('log: Symbol set');	}	else if (temp[i].name == 'Symbol Bold') {		charSymbolBold = temp[i];		$.writeln('log: Symbol Bold set');	}	else if (temp[i].name == 'Mt extra') {		charMTExtra = temp[i];		$.writeln('log: Mt extra set');	}	else if (temp[i].name == 'Mt extra Bold') {		charMTExtraBold = temp[i];		$.writeln('log: Mt extra Bold set');	}}// Position.NORMAL	Normal position	1852797549 = 'norm'// Position.OT_DENOMINATOR	For OpenType fonts, shrinks the text but keeps text on the main text baseline. Note: Valid only for numeric characters.	1884247140 = 'pOTd'// Position.OT_NUMERATOR	For OpenType fonts, shrinks the text but keeps the top of the characters aligned with the top of the main text. Note: Valid only for numeric characters.	1884247150 = 'pOTn'// Position.OT_SUBSCRIPT	For OpenType fonts, uses--if available--lowered glyphs that are sized correctly relative to the surrounding characters.	1884247138 = 'pOTb'// Position.OT_SUPERSCRIPT	For OpenType fonts, uses--if available--raised glyphs that are sized correctly relative to the surrounding characters.	1884247155 = 'pOTs'// Position.SUBSCRIPT	Subscripts the text.	1935831907 = 'sbsc'// Position.SUPERSCRIPT	Superscripts the text.	1936749411 = 'spsc'for(var i = 0; i < stringChars.length; i++){	// Fazer Verdana Ang, Rad e Arco     $.writeln(stringChars[i].appliedFont.fullName + " " + stringChars[i].position);        if (stringChars[i].contents == '²') {    	stringChars[i].contents = '2';    	stringChars[i].appliedCharacterStyle = charSuper;    }    else if(stringChars[i].contents == '³') {    	stringChars[i].contents = '3';    	stringChars[i].appliedCharacterStyle = charSuper;    }  	if(stringChars[i].fontStyle == 'Bold')  	{  		if(stringChars[i].position == Position.SUPERSCRIPT)  			stringChars[i].appliedCharacterStyle = charSuperBold;		else if (stringChars[i].position == Position.SUBSCRIPT)			stringChars[i].appliedCharacterStyle = charSubBold;		else if (stringChars[i].appliedFont.fullName == 'Symbol')			stringChars[i].appliedCharacterStyle = charSymbolBold;		else			stringChars[i].appliedCharacterStyle = charBold;  	}  	else if(stringChars[i].fontStyle == 'Italic')  	{  		if(stringChars[i].position == Position.SUPERSCRIPT)  			stringChars[i].appliedCharacterStyle = charSuperItalic;		else if (stringChars[i].position == Position.SUBSCRIPT)			stringChars[i].appliedCharacterStyle = charSubItalic;		else			stringChars[i].appliedCharacterStyle = charItalic;  	}  	else   	{  		if(stringChars[i].position == Position.SUPERSCRIPT)  			stringChars[i].appliedCharacterStyle = charSuper;		else if (stringChars[i].position == Position.SUBSCRIPT)			stringChars[i].appliedCharacterStyle = charSub;		else if (stringChars[i].appliedFont.fullName == 'Symbol')			stringChars[i].appliedCharacterStyle = charSymbol;		else if (stringChars[i].appliedFont.fullName == 'MT Extra')			stringChars[i].appliedCharacterStyle = charMTExtra;		  	}  //   if(stringChars[i].position == Position.SUPERSCRIPT)  //       stringChars[i].appliedCharacterStyle = charSuper;  //   if (stringChars[i].fontStyle == 'Bold Italic')		// stringChars[i].appliedCharacterStyle = charBoldIt;    //$.writeln(stringChars[i].appliedCharacterStyle);}// var log = app.selection[0];// for (var i = 0; i < log.characters.length; i++) {// 	$.writeln(log.characters[i].fontStyle);// };// log = app.activeDocument.allCharacterStyles;// for(var i = 0; i < log.length; i++)// {//     $.writeln(i.toString() + " " + log[i].name);// }// app.findChangeGrepOptions.includeFootnotes = true;// app.findGrepPreferences = null;// app.findGrepPreferences.findWhat = ".";// log = app.findGrepPreferences.numberingFormat;// $.writeln(log);// log = app.findGrepPreferences.appliedCharacterStyle;// $.writeln(log);